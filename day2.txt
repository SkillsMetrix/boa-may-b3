
from fastapi import FastAPI,HTTPException,status
from .import schema
from random import randrange
app=FastAPI()
userData=[]

def searchUser(id):
    for index,value in enumerate(userData):
        if value['id']== id:
            return index

@app.get('/loadusers')
def loadUsers():
    return {'message':userData}


@app.get('/loaduser/{id}')
def loadUser(id:int):
    post=searchUser(id)
    if post == None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,detail="Sorry, User With Given ID not Found")
    
    return {'user found': post}

@app.delete('/deleteuser/{id}')
def deleteUser(id:int):
    post=searchUser(id)
    if post == None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,detail="Sorry, User With Given ID not Found")
    userData.pop(post)
    return {'user found and deleted': post}


@app.put('/updateuser/{id}')
def updateUser(id:int,data:schema.User):
    post=searchUser(id)
    if post == None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,detail="Sorry, User With Given ID not Found")
    userValue=data.model_dump()
    userValue['id']=id
    userData[post]=userValue
    
    return {'user found and updated': userValue}


@app.post('/addusers')
def addUser(data:schema.User):
    userValue=data.model_dump()
    userValue['id']=randrange(0,1000)
    userData.append(userValue)
    return {'message':userValue}


-----

from pydantic import BaseModel
class User(BaseModel):
    uname: str
    email: str
    city: str
