from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

SQL_DB = "sqlite:///./mytest.db"

engine = create_engine(
    SQL_DB, connect_args={"check_same_thread": False}

)
SessioLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

Base = declarative_base()


def get_connection():
    db = SessioLocal()
    try:
        yield db
    finally:
        db.close()


-----


# this file describe the table and columns in database

from sqlalchemy import Column,String
from .database import Base


class UserApp(Base):
    __tablename__="USERAPP"
    uname= Column(String,primary_key=True)
    email=Column(String)
    city= Column(String)


-----


from fastapi import FastAPI
from .database import engine
from . import cud,readdata,models

app=FastAPI()
# this line creates respective table in DB by seeing the model
models.Base.metadata.create_all(bind=engine)

app.include_router(cud.router)
app.include_router(readdata.router)
